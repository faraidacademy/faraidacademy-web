---
import "material/dialog/dialog";
import "material/button/filled-button";
import "material/button/text-button";
import { Icon } from "astro-icon/components";

interface Props {
  userName: string;
  isParticipant: boolean | undefined;
}
const { userName, isParticipant } = Astro.props;
---

{
  !isParticipant && (
    <md-dialog id="competition-welcome-dialog">
      <div slot="headline">Selamat datang, {userName}</div>
      <div slot="content">
        Apakah anda ingin berpartisipasi dalam <br />{" "}
        <>
          <Icon name="trophy2a" />
          <strong> Faraid Competition 2025</strong>
        </>
        ?
      </div>
      <div slot="actions">
        <md-filled-button id="prompt-join-competition">Ya</md-filled-button>
        <md-text-button id="prompt-dismiss-competition">
          Mungkin nanti
        </md-text-button>
      </div>
    </md-dialog>
  )
}
<script>
  import { joinCompetition } from "../lib/joinCompetition.js";
  import { navigate } from 'astro:transitions/client';
  import "material/dialog/dialog";
  import "material/button/filled-button";
  import "material/button/text-button";

  // Define a type for dialog elements that might have MWC or native dialog APIs
  type DialogLikeElement = HTMLElement & {
    open?: boolean;
    show?: () => void;
    showModal?: () => void;
    close: (reason?: string) => void;
  };

  document.addEventListener("astro:page-load", () => {
    const dialog = document.getElementById(
      "competition-welcome-dialog",
    ) as DialogLikeElement | null;
    const joinBtn = document.getElementById("prompt-join-competition");
    const dismissBtn = document.getElementById("prompt-dismiss-competition");

    if (dialog && !window.localStorage.getItem("competitionPromptDismissed")) {
      if (typeof dialog.show === "function") {
        dialog.show();
      } else if (typeof dialog.showModal === "function") {
        dialog.showModal();
      } else {
        dialog.open = true;
      }
    }

    if (joinBtn && dialog) {
      joinBtn.addEventListener("click", () => {
        // Fix: pass dialog as type 'any' to avoid TS error
        joinCompetition({ button: joinBtn, dialog: dialog as any });
      });
    }

    if (dismissBtn && dialog) {
      dismissBtn.addEventListener("click", () => {
        window.localStorage.setItem("competitionPromptDismissed", "true");
        if (typeof dialog.close === "function") {
          dialog.close();
        }
      });
    }
  });
</script>
<style>
  #competition-welcome-dialog {
    z-index: 1000;
    margin: auto;
  }
</style>
