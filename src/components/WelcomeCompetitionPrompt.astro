---
import "material/dialog/dialog";
import "material/button/filled-button";
import "material/button/text-button";
import { Icon } from "astro-icon/components";
interface Props {
  userName: string;
  isParticipant: boolean | undefined;
}
const { userName, isParticipant } = Astro.props;
const showPrompt = typeof window === 'undefined' ? true : (!isParticipant && !window.localStorage.getItem('competitionPromptDismissed'));
---
{!isParticipant && (
  <md-dialog id="competition-welcome-dialog" open>
    <div slot="headline">
    Selamat datang, {userName}
    </div>
    <div slot="content">
      Apakah anda ingin berpartisipasi dalam <br> <Icon name="trophy2a" /><strong> Faraid Competition 2025</strong>?
    </div>
    <div slot="actions">
      <md-filled-button id="prompt-join-competition">Ya</md-filled-button>
      <md-text-button id="prompt-dismiss-competition">Mungkin nanti</md-text-button>
    </div>
  </md-dialog>
)}
<script>
  import "material/dialog/dialog";
  import "material/button/filled-button";
  import "material/button/text-button";
  document.addEventListener("astro:page-load", () => {
    const dialog = document.getElementById("competition-welcome-dialog");
    const joinBtn = document.getElementById("prompt-join-competition");
    const dismissBtn = document.getElementById("prompt-dismiss-competition");
    if (joinBtn) {
      joinBtn.addEventListener("click", async () => {
        (joinBtn as HTMLButtonElement).disabled = true;
        try {
          const response = await fetch("/api/profile", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ is_participant: true })
          });
          if (!response.ok) {
            const errorData = await response.json();
            alert(errorData.error || "Failed to join competition");
            (joinBtn as HTMLButtonElement).disabled = false;
            return;
          }
          window.location.reload();
        } catch (err) {
          alert("An unexpected error occurred.");
          (joinBtn as HTMLButtonElement).disabled = false;
        }
      });
    }
    if (dismissBtn) {
      dismissBtn.addEventListener("click", () => {
        window.localStorage.setItem('competitionPromptDismissed', 'true');
        if (dialog && typeof (dialog as HTMLDialogElement).close === 'function') (dialog as HTMLDialogElement).close();
      });
    }
  });
</script>
<style>
#competition-welcome-dialog {
    z-index: 1000;
    margin: auto;
}
</style>
