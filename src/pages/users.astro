---
// src/pages/users.astro
import { Image } from "astro:assets";
import Base from "../layout/Base.astro";
import { Icon } from "astro-icon/components";

interface UserData {
  users: App.Locals[];
}

let users: App.Locals[] = [];
try {
  const apiUrl = new URL("/api/users", Astro.url);
  const response = await fetch(apiUrl);

  if (response.ok) {
    const data: UserData = await response.json();
    users = data.users;
  } else {
    console.error("Failed to fetch users:", response.status);
  }
} catch (error) {
  console.error("Error fetching users:", error);
}
---

<Base title="User List">
  <main>
    <div class="user-list">
      {
        users.map((user) => (
          <md-outlined-card>
            {user.is_visible && user.name ? (
              <>
                <Image
                  class="avatar"
                  src={user.avatar_url || "/default-avatar.png"}
                  alt={`${user.name}'s avatar`}
                  width={64}
                  height={64}
                />
                <div class="user-info col">
                  <div class="name">{user.name}</div>
                  <div class="school">
                    {user.school || "No School Provided"}
                  </div>
                </div>
              </>
            ) : (
              <>
                <Icon
                  name="material-symbols:person-rounded"
                  class="avatar anon"
                  width={64}
                  height={64}
                />
                <div class="user-info col">
                  <div class="name">Anonim</div>
                  <div class="school" />
                </div>
              </>
            )}
          </md-outlined-card>
        ))
      }
    </div>
  </main>
</Base>

<script>
  import "material/card/outlined-card";
</script>

<style>
  md-outlined-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 16px;
    gap: 0.5em;
  }

  .avatar {
    border-radius: 50%;
    border: 2px solid var(--md-sys-color-outline-variant);
  }

  .anon{
    opacity: 0.5;
  }

  .name {
    font-size: 0.9em;
    font-weight:500;
  }

  .school {
    font-size: 0.7em;
    color: var(--md-sys-color-on-surface-variant);
  }

  .user-info {
    text-align: center;
  }

  .user-list {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 10px;
  }

  @media (min-width: 600px) and (max-width: 840px) {
    .user-list {
      grid-template-columns: repeat(4, 1fr);
    }
  }

  @media (min-width: 840px) {
    .user-list {
      grid-template-columns: repeat(5, 1fr);
    }
  }
</style>
