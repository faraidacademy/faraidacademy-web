---

`src\styles\light.css`:
```
.light {
  --md-sys-color-primary: rgb(6 107 91);
  --md-sys-color-surface-tint: rgb(6 107 91);
  --md-sys-color-on-primary: rgb(255 255 255);
  --md-sys-color-primary-container: rgb(160 242 222);
  --md-sys-color-on-primary-container: rgb(0 32 26);
  --md-sys-color-secondary: rgb(74 99 93);
  --md-sys-color-on-secondary: rgb(255 255 255);
  --md-sys-color-secondary-container: rgb(205 232 224);
  --md-sys-color-on-secondary-container: rgb(6 32 26);
  --md-sys-color-tertiary: rgb(67 98 120);
  --md-sys-color-on-tertiary: rgb(255 255 255);
  --md-sys-color-tertiary-container: rgb(200 230 255);
  --md-sys-color-on-tertiary-container: rgb(0 30 46);
  --md-sys-color-error: rgb(186 26 26);
  --md-sys-color-on-error: rgb(255 255 255);
  --md-sys-color-error-container: rgb(255 218 214);
  --md-sys-color-on-error-container: rgb(65 0 2);
  --md-sys-color-background: rgb(245 251 247);
  --md-sys-color-on-background: rgb(23 29 27);
  --md-sys-color-surface: rgb(245 251 247);
  --md-sys-color-on-surface: rgb(23 29 27);
  --md-sys-color-surface-variant: rgb(219 229 224);
  --md-sys-color-on-surface-variant: rgb(63 73 70);
  --md-sys-color-outline: rgb(111 121 118);
  --md-sys-color-outline-variant: rgb(191 201 196);
  --md-sys-color-shadow: rgb(0 0 0);
  --md-sys-color-scrim: rgb(0 0 0);
  --md-sys-color-inverse-surface: rgb(43 50 48);
  --md-sys-color-inverse-on-surface: rgb(236 242 239);
  --md-sys-color-inverse-primary: rgb(132 214 194);
  --md-sys-color-primary-fixed: rgb(160 242 222);
  --md-sys-color-on-primary-fixed: rgb(0 32 26);
  --md-sys-color-primary-fixed-dim: rgb(132 214 194);
  --md-sys-color-on-primary-fixed-variant: rgb(0 81 68);
  --md-sys-color-secondary-fixed: rgb(205 232 224);
  --md-sys-color-on-secondary-fixed: rgb(6 32 26);
  --md-sys-color-secondary-fixed-dim: rgb(177 204 196);
  --md-sys-color-on-secondary-fixed-variant: rgb(51 75 69);
  --md-sys-color-tertiary-fixed: rgb(200 230 255);
  --md-sys-color-on-tertiary-fixed: rgb(0 30 46);
  --md-sys-color-tertiary-fixed-dim: rgb(170 203 228);
  --md-sys-color-on-tertiary-fixed-variant: rgb(42 74 95);
  --md-sys-color-surface-dim: rgb(213 219 216);
  --md-sys-color-surface-bright: rgb(245 251 247);
  --md-sys-color-surface-container-lowest: rgb(255 255 255);
  --md-sys-color-surface-container-low: rgb(239 245 241);
  --md-sys-color-surface-container: rgb(233 239 236);
  --md-sys-color-surface-container-high: rgb(227 234 230);
  --md-sys-color-surface-container-highest: rgb(222 228 224);
}

```

---

`src\layout\Base.astro`:
```
---
import Header from "../components/Header.astro";
import "../styles/global.css";
import { checkAndSetSession } from '../lib/auth'; // Import here
import "../styles/light.css";  // Import light theme
import "../styles/dark.css";   // Import dark theme


interface Props {
  title: string;
}

const { title } = Astro.props;

// Perform the login check HERE, in the layout
const isLoggedIn = await checkAndSetSession(Astro.cookies, Astro.locals);

import '@fontsource-variable/open-sans';

---

<html lang="en">  <!--  No class initially; JS will add it. -->
  <head>
    <meta charset="utf-8" />
    <title>{title}</title>
    <meta name="viewport" content="width=device-width" />
  </head>
  <body>
    <Header isLoggedIn={isLoggedIn} />
    <slot />
  </body>
</html>
```

---

`src\styles\global.css`:
```
*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
}

body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
    font-family: "Open Sans Variable", sans-serif;
    font-size: 1rem;
    color: var(--md-sys-color-on-background);
    background-color: var(--md-sys-color-background);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    padding: 1em;
    transition: background-color 0.3s ease, color 0.3s ease;
    gap: 1em;
}

[data-icon] {
    color: var(--md-sys-color-on-surface)
}

input,
button,
textarea,
select {
    font: inherit;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

p {
    text-wrap: pretty;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    text-wrap: balance;
}

#root,
#__next {
    isolation: isolate;
}

.col {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.row {
    display: flex;
    flex-direction: row;
    align-items: center;
}
```

---

`src\pages\index.astro`:
```
---
// src/pages/index.astro

import Base from "../layout/Base.astro";
import Ayat from '../images/ayat.svg';
import { Icon } from "astro-icon/components";
import CompetitionAnnouncement from "../components/CompetitionAnnouncement.astro";
---

<Base title="Faraid Academy - Home">
  <div class="main-verse col">
    <div class="verse row">
      <Icon class="flip" name="parenthesis" size="2em" />
      <Ayat height={64} fill="var(--md-sys-color-on-surface)" />
      <Icon name="parenthesis" size="2em" />
    </div>
    <p class="row">
      These (inheritance rules) are settled portions ordained by Allah <Icon
        name="tabarak"
      />
    </p>
  </div>
  <CompetitionAnnouncement></CompetitionAnnouncement>

  <style>
    .main-verse {
      gap: 1em;
      font-family: "EB Garamond Variable", serif;
    }

    .flip {
      transform: scaleX(-1);
    }

    .verse {
      gap: 1em;
    }

    p {
      text-align: center;
      gap: 0.3em;
    }
  </style>
</Base>

```

---

`src\styles\dark.css`:
```
.dark {
  --md-sys-color-primary: rgb(132 214 194);
  --md-sys-color-surface-tint: rgb(132 214 194);
  --md-sys-color-on-primary: rgb(0 56 46);
  --md-sys-color-primary-container: rgb(0 81 68);
  --md-sys-color-on-primary-container: rgb(160 242 222);
  --md-sys-color-secondary: rgb(177 204 196);
  --md-sys-color-on-secondary: rgb(29 53 47);
  --md-sys-color-secondary-container: rgb(51 75 69);
  --md-sys-color-on-secondary-container: rgb(205 232 224);
  --md-sys-color-tertiary: rgb(170 203 228);
  --md-sys-color-on-tertiary: rgb(17 51 72);
  --md-sys-color-tertiary-container: rgb(42 74 95);
  --md-sys-color-on-tertiary-container: rgb(200 230 255);
  --md-sys-color-error: rgb(255 180 171);
  --md-sys-color-on-error: rgb(105 0 5);
  --md-sys-color-error-container: rgb(147 0 10);
  --md-sys-color-on-error-container: rgb(255 218 214);
  --md-sys-color-background: rgb(14 21 19);
  --md-sys-color-on-background: rgb(222 228 224);
  --md-sys-color-surface: rgb(14 21 19);
  --md-sys-color-on-surface: rgb(222 228 224);
  --md-sys-color-surface-variant: rgb(63 73 70);
  --md-sys-color-on-surface-variant: rgb(191 201 196);
  --md-sys-color-outline: rgb(137 147 143);
  --md-sys-color-outline-variant: rgb(63 73 70);
  --md-sys-color-shadow: rgb(0 0 0);
  --md-sys-color-scrim: rgb(0 0 0);
  --md-sys-color-inverse-surface: rgb(222 228 224);
  --md-sys-color-inverse-on-surface: rgb(43 50 48);
  --md-sys-color-inverse-primary: rgb(6 107 91);
  --md-sys-color-primary-fixed: rgb(160 242 222);
  --md-sys-color-on-primary-fixed: rgb(0 32 26);
  --md-sys-color-primary-fixed-dim: rgb(132 214 194);
  --md-sys-color-on-primary-fixed-variant: rgb(0 81 68);
  --md-sys-color-secondary-fixed: rgb(205 232 224);
  --md-sys-color-on-secondary-fixed: rgb(6 32 26);
  --md-sys-color-secondary-fixed-dim: rgb(177 204 196);
  --md-sys-color-on-secondary-fixed-variant: rgb(51 75 69);
  --md-sys-color-tertiary-fixed: rgb(200 230 255);
  --md-sys-color-on-tertiary-fixed: rgb(0 30 46);
  --md-sys-color-tertiary-fixed-dim: rgb(170 203 228);
  --md-sys-color-on-tertiary-fixed-variant: rgb(42 74 95);
  --md-sys-color-surface-dim: rgb(14 21 19);
  --md-sys-color-surface-bright: rgb(52 59 56);
  --md-sys-color-surface-container-lowest: rgb(9 15 14);
  --md-sys-color-surface-container-low: rgb(23 29 27);
  --md-sys-color-surface-container: rgb(27 33 31);
  --md-sys-color-surface-container-high: rgb(37 43 41);
  --md-sys-color-surface-container-highest: rgb(48 54 52);
}

```

---

`src\components\Header.astro`:
```
---
import "@fontsource-variable/eb-garamond";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";

interface Props {
    isLoggedIn: boolean;
}

const { isLoggedIn } = Astro.props;
const { avatar_url, name } = Astro.locals;
---

<header>
    <div class="main">
        <Icon name="Logo" />
        <h1>FaraidAcademy</h1>
    </div>
    <div class="nav row">
        <div class="theme-switcher-container">
            <button id="theme-toggle" aria-label="Toggle Theme">
                <Icon
                    id="theme-icon"
                    name="material-symbols:light-mode-rounded"
                />
            </button>
        </div>
        {
            isLoggedIn ? (
                avatar_url ? (
                    <a href="/dashboard">
                        <Image
                            class="avatar"
                            src={avatar_url}
                            alt={name ? `${name}'s avatar` : "User Avatar"}
                            width={32}
                            height={32}
                            loading="lazy"
                            format="webp"
                        />
                    </a>
                ) : (
                    <a href="/dashboard">Dashboard</a>
                )
            ) : (
                <form action="/api/auth/signin" method="post">
                    <md-text-button
                        class="button"
                        name="provider"
                        value="google"
                        type="submit"
                    >
                        LOGIN
                    </md-text-button>
                </form>
            )
        }
    </div>
</header>

<script>
    import "material/button/text-button";

    const themeToggle = document.getElementById("theme-toggle");
    const themeIcon = document.getElementById("theme-icon");
    const htmlElement = document.documentElement;

    function setTheme(theme: "light" | "dark") {
        if (themeIcon === null) {
            console.error("themeIcon element not found!");
            return;
        }

        if (theme === "dark") {
            htmlElement.classList.remove("light");
            htmlElement.classList.add("dark");
            themeIcon.setAttribute("name", "material-symbols:dark-mode-rounded"); // Corrected icon name
            localStorage.setItem("theme", "dark");
        } else {
            htmlElement.classList.remove("dark");
            htmlElement.classList.add("light");
            themeIcon.setAttribute("name", "material-symbols:light-mode-rounded"); // Corrected icon name
            localStorage.setItem("theme", "light");
        }
    }

    function initializeTheme() {
        const savedTheme = localStorage.getItem("theme");
        const prefersDarkScheme = window.matchMedia(
            "(prefers-color-scheme: dark)",
        ).matches;

        if (savedTheme === "dark" || savedTheme === "light") {
            setTheme(savedTheme);
        } else if (prefersDarkScheme) {
            setTheme("dark");
        } else {
            setTheme("light");
        }
    }

    if (themeToggle !== null) {
        themeToggle.addEventListener("click", () => {
            const currentTheme = localStorage.getItem("theme");
            setTheme(currentTheme === "dark" ? "light" : "dark");
        });
    } else {
        console.error("theme-toggle element not found!");
    }

    initializeTheme();
</script>

<style>
    header {
        font-family: "EB Garamond Variable", serif;
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 0.3em;
        position: fixed;
        top: 0;
        padding: 1em;
        justify-content: space-between;
        width: 100%;
        background-color: transparent;
        z-index: 100;
    }

    .main {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 0.5em;
    }
    h1 {
        font-weight: 500;
        font-size: 1em;
    }

    header a {
        text-decoration: none;
        color: inherit;
    }

    .avatar {
        border-radius: 50%;
        object-fit: cover;
        border: 2px solid #ccc;
    }

    .button {
        font-family: "Open Sans", sans-serif;
    }

    .theme-switcher-container {
        display: flex;
        align-items: center;
        margin-right: 1rem;
    }

    #theme-toggle {
        background: none;
        border: none;
        cursor: pointer;
        font-size: 1.5rem;
        color: var(--md-sys-color-on-surface);
        padding:;
    }

    #theme-icon {
        display: flex;
    }
</style>

```

---